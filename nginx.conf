server {
    listen 80;
    server_name 1pa1.xyz www.1pa1.xyz;

    location /api/ {
        proxy_pass https://backend:5000/api/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /socket.io/ {
        proxy_pass https://backend:5000/socket.io/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Manejo de frontend React para rutas SPA
    location / {
        proxy_pass https://frontend:80/;

        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Aqu√≠ le decimos que si el recurso no existe, que devuelva index.html del frontend
        proxy_intercept_errors on;

        error_page 404 = /index.html;

        # Para que nginx busque el index.html dentro del frontend
        location = /index.html {
            proxy_pass https://frontend:80/index.html;
        }
    }
}
